;;; -*-Emacs-Lisp-*-

;; ELS-CFG: installation setting about private ELs.

;;; Code:

(defvar default-load-path load-path)

(add-to-list 'load-path ".")
(add-to-list 'load-path "util")
(add-to-list 'load-path "mode")

(add-to-list 'load-path
	     (expand-file-name "../../site-lisp/apel" data-directory))

(if (boundp 'LISPDIR)
    (progn
      (add-to-list 'default-load-path LISPDIR)
      (add-to-list 'load-path LISPDIR)
      (add-to-list 'load-path (expand-file-name "apel" LISPDIR))
      ))

(if (boundp 'VERSION_SPECIFIC_LISPDIR)
    (add-to-list 'load-path VERSION_SPECIFIC_LISPDIR))

(require 'install)

(add-latest-path "custom")

(add-path default-directory)

;;; @ Please specify prefix of install directory.
;;;

;; Please specify install path prefix.
;; If it is omitted, shared directory (maybe /usr/local is used).
(defvar PREFIX install-prefix)
;;(setq PREFIX "~/")

;; Please specify prefix for ``ELS'' [optional]
(setq ELS_PREFIX ".")



;;; @ optional settings
;;;

;; It is generated by automatically. Please set variable `PREFIX'.
;; If you don't like default directory tree, please set it.
(defvar LISPDIR (install-detect-elisp-directory PREFIX))
;; (setq install-default-elisp-directory "~/lib/emacs/lisp")

(defvar VERSION_SPECIFIC_LISPDIR
  (install-detect-elisp-directory PREFIX nil 'version-specific))

(setq ELS_DIR (expand-file-name ELS_PREFIX LISPDIR))

(defvar PACKAGEDIR
  (if (boundp 'early-packages)
      (let ((dirs (append (if early-package-load-path
			      early-packages)
			  (if late-package-load-path
			      late-packages)
			  (if last-package-load-path
			      last-packages)))
	    dir)
	(while (not (file-exists-p
		     (setq dir (car dirs))))
	  (setq dirs (cdr dirs)))
	dir)))

;;; ELS-CFG ends here
